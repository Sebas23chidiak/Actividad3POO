package actividad6crud;

import java.io.File;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JFileChooser;


public class InterfazPrincipal extends javax.swing.JFrame {

    String ruta = "C:\\Users\\admin\\Documents\\NetBeansProjects\\Actividad3\\Parte 2\\Crud\\archivos";
    private DefaultListModel<String> listModel;
    private JList<String> fileList;

    public InterfazPrincipal() {
        initComponents();
        // Crear el modelo de lista
        listModel = new DefaultListModel<>();
        fileList = new JList<>(listModel);
        JScrollPane scrollPane = new JScrollPane(fileList);

        // Vincular la lista al JScrollPane o contenedor deseado
        jScrollPane2.setViewportView(fileList);

        // Obtener la lista de archivos TXT en la carpeta
        obtenerArchivosTXT();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        crear = new javax.swing.JButton();
        leer = new javax.swing.JButton();
        editar = new javax.swing.JButton();
        borrar = new javax.swing.JButton();
        salir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lista = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("C.R.U.D");

        crear.setText("Crear");
        crear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearActionPerformed(evt);
            }
        });

        leer.setText("Leer");
        leer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leerActionPerformed(evt);
            }
        });

        editar.setText("Editar");
        editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarActionPerformed(evt);
            }
        });

        borrar.setText("Borrar");
        borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarActionPerformed(evt);
            }
        });

        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });

        lista.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(lista);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(crear)
                                        .addComponent(leer)
                                        .addComponent(editar)
                                        .addComponent(borrar)
                                        .addComponent(salir))
                                .addGap(40, 40, 40))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(111, 111, 111))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(crear)
                                                .addGap(18, 18, 18)
                                                .addComponent(leer)
                                                .addGap(18, 18, 18)
                                                .addComponent(editar)
                                                .addGap(18, 18, 18)
                                                .addComponent(borrar)
                                                .addGap(18, 18, 18)
                                                .addComponent(salir))
                                        .addComponent(jScrollPane2))
                                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>

    public String obtenerNombreArchivoSeleccionado() {
        String selectedFile = fileList.getSelectedValue();
        if (selectedFile != null) {
            return selectedFile.toString();
        } else {
            return null;
        }
    }

    private void crearActionPerformed(java.awt.event.ActionEvent evt) {
        String nombreArchivo = obtenerNombreArchivoSeleccionado();
        String rutaCompleta;
        if (nombreArchivo != null) {
            rutaCompleta = ruta + File.separator + nombreArchivo;
        } else {
            // Generar un nombre único
            String nombreUnico = generarNombreUnico();
            rutaCompleta = ruta + File.separator + nombreUnico + ".txt";
        }

        InterfazNuevo nuevo = new InterfazNuevo(rutaCompleta);
        nuevo.setVisible(true);
    }

    private void leerActionPerformed(java.awt.event.ActionEvent evt) {
        JFileChooser fileChooser = new JFileChooser(ruta);
        int resultado = fileChooser.showOpenDialog(this);
        if (resultado == JFileChooser.APPROVE_OPTION) {
            File archivoSeleccionado = fileChooser.getSelectedFile();
            String rutaCompleta = archivoSeleccionado.getAbsolutePath();

            InterfazLeer leer = new InterfazLeer();
            leer.mostrarContenidoArchivo(rutaCompleta);
            leer.setVisible(true);
        }
    }

    private String generarNombreUnico() {
        long timestamp = System.currentTimeMillis();
        return "archivo_" + timestamp;
    }



    private void editarActionPerformed(java.awt.event.ActionEvent evt) {
        String nombreArchivo = obtenerNombreArchivoSeleccionado();
        if (nombreArchivo != null) {
            String rutaCompleta = ruta + File.separator + nombreArchivo;
            InterfazEditar editar = new InterfazEditar(rutaCompleta);
            editar.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún archivo.");
        }
    }

    private void borrarActionPerformed(java.awt.event.ActionEvent evt) {
        String nombreArchivo = obtenerNombreArchivoSeleccionado();
        if (nombreArchivo != null) {
            try {
                File archivo = new File(ruta + File.separator + nombreArchivo);
                if (archivo.exists()) {
                    if (archivo.delete()) {
                        JOptionPane.showMessageDialog(this, "Archivo eliminado correctamente.");
                        obtenerArchivosTXT(); // Actualizar la lista de archivos
                    } else {
                        JOptionPane.showMessageDialog(this, "No se pudo eliminar el archivo.");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "El archivo no existe.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al eliminar el archivo: " + e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún archivo.");
        }
    }

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {
        dispose();
    }

    private void obtenerArchivosTXT() {
        // Obtener la lista de archivos en la carpeta
        File carpeta = new File(ruta);
        File[] archivos = carpeta.listFiles();

        // Limpiar el modelo de lista
        listModel.clear();

        // Agregar los archivos TXT al modelo de lista
        for (File archivo : archivos) {
            if (archivo.isFile() && archivo.getName().toLowerCase().endsWith(".txt")) {
                listModel.addElement(archivo.getName());
            }
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton borrar;
    private javax.swing.JButton crear;
    private javax.swing.JButton editar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton leer;
    private javax.swing.JList<String> lista;
    private javax.swing.JButton salir;
    // End of variables declaration
}
